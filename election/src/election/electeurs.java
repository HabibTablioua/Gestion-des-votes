package election;

import java.io.BufferedInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.Vector;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import net.proteanit.sql.DbUtils;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */

/**
 *
 * @author user
 */
public class electeurs extends javax.swing.JInternalFrame {

    Connection Con = null;
    PreparedStatement pst  = null;
    ResultSet Rs=null;
    Statement St = null;
    
    public electeurs() {
        initComponents();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI ui = (BasicInternalFrameUI) this.getUI();
        ui.setNorthPane(null);
        tbload();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        ajout = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(780, 370));

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));
        jPanel1.setMinimumSize(new java.awt.Dimension(780, 370));

        jTable1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nom", "Age", "Genre", "Pass"
            }
        ));
        jTable1.setIntercellSpacing(new java.awt.Dimension(5, 5));
        jTable1.setRowHeight(30);
        jTable1.setSelectionBackground(new java.awt.Color(0, 102, 102));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Femme ", "Homme" }));
        jComboBox1.setToolTipText("");

        jLabel3.setText("Nom et Prenom");

        jLabel7.setText("Mot de passe");

        jLabel4.setText("Age");

        jLabel5.setText("Genre");

        ajout.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        ajout.setForeground(new java.awt.Color(255, 255, 255));
        ajout.setText("Ajouter");
        ajout.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        ajout.setContentAreaFilled(false);
        ajout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ajoutMouseClicked(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Supprimer");
        jButton2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jButton2.setContentAreaFilled(false);
        jButton2.setMaximumSize(new java.awt.Dimension(47, 22));
        jButton2.setMinimumSize(new java.awt.Dimension(47, 22));
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Modifier");
        jButton3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jButton3.setContentAreaFilled(false);
        jButton3.setMaximumSize(new java.awt.Dimension(47, 22));
        jButton3.setMinimumSize(new java.awt.Dimension(47, 22));
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setIcon(new javax.swing.ImageIcon("C:\\Users\\user\\Desktop\\IMAGES\\layout.png")); // NOI18N
        jLabel6.setText("Admin > Electeur");

        jButton4.setBackground(new java.awt.Color(0, 102, 102));
        jButton4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setIcon(new javax.swing.ImageIcon("C:\\Users\\user\\Desktop\\IMAGES\\icons8-ms-excel-26.png")); // NOI18N
        jButton4.setText("Import EXCEL");
        jButton4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jButton4.setContentAreaFilled(false);
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(0, 102, 102));
        jButton5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setIcon(new javax.swing.ImageIcon("C:\\Users\\user\\Desktop\\IMAGES\\icons8-ms-excel-26.png")); // NOI18N
        jButton5.setText("Export EXCEL");
        jButton5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jButton5.setContentAreaFilled(false);
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton5MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 673, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(101, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(104, 104, 104)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ajout, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(8, 8, 8))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(8, 8, 8)
                                                .addComponent(jLabel3))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(10, 10, 10)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jLabel7)
                                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jTextField4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(8, 8, 8))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(ajout, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 344, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ajoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ajoutMouseClicked
        if(jTextField2.getText().isEmpty()){
          JOptionPane.showMessageDialog (this,"Enter le Nom");
        }else if(jTextField3.getText().isEmpty()){
          JOptionPane.showMessageDialog (this,"Enter le Mot de passe");
        }else if(jTextField4.getText().isEmpty()){
          JOptionPane.showMessageDialog (this,"Enter le Age");
        }else{
          try{
             Con = DriverManager.getConnection("jdbc:MySQL://localhost:3306/election","root","");
             PreparedStatement Add = Con.prepareStatement("insert into electeur (enom,eage,egenre,epass) VALUES (?, ?, ?, ?)");
                
            Add.setString(1, jTextField2.getText());
            String genre;
            genre =jComboBox1.getSelectedItem().toString();
            Add.setString(3, genre); 
            Add.setString(2, jTextField4.getText()); 
            Add.setString(4, jTextField3.getText());
                
            int rowsAffected = Add.executeUpdate();
            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(this, "Data inserted successfully!");
            } else {
                JOptionPane.showMessageDialog(this, "Failed to insert data");
            }

            // Close the resources
            Add.close();
            Con.close();
            tbload();
          }catch(Exception e){
             JOptionPane.showMessageDialog (this,e);
          }
        }
        jTextField2.setText("");
        jTextField3.setText("");
        jTextField4.setText("");
                
    }//GEN-LAST:event_ajoutMouseClicked
    String Key = "";
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
         DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
         int MyIndex = jTable1.getSelectedRow();
         if (MyIndex != -1) {
        Key = model.getValueAt(MyIndex, 0).toString(); 
        jTextField2.setText(model.getValueAt(MyIndex, 0).toString());
        jTextField4.setText(model.getValueAt(MyIndex, 1).toString());
        jComboBox1.setSelectedItem(model.getValueAt(MyIndex, 2).toString());
        jTextField3.setText(model.getValueAt(MyIndex, 3).toString());
    }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        if (Key.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Veuillez sélectionner une ligne à supprimer.", "Aucune ligne sélectionnée", JOptionPane.WARNING_MESSAGE);
        return;}
        try {
        Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/election", "root", "");
        String query = "DELETE FROM electeur WHERE enom = ?";
        try (PreparedStatement pst = Con.prepareStatement(query)) {
            pst.setString(1, Key);
            pst.executeUpdate();

            // Clear the text fields and reload the table
            jTextField2.setText("");
            jTextField3.setText("");
            jTextField4.setText("");
            jComboBox1.setSelectedIndex(-1); // Assuming you want to clear the selection in the JComboBox
            tbload();

            JOptionPane.showMessageDialog(this, "Ligne supprimée avec succès.", "Suppression réussie", JOptionPane.INFORMATION_MESSAGE);
        }
    } catch (SQLException ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(this, "Erreur lors de la suppression de la ligne.", "Erreur de suppression", JOptionPane.ERROR_MESSAGE);
    } 
    }//GEN-LAST:event_jButton2MouseClicked

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
      if (Key.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Veuillez sélectionner une ligne à modifier.", "Aucune ligne sélectionnée", JOptionPane.WARNING_MESSAGE);
        return;
    }

    try {
        Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/election", "root", "");

        String newNom = jTextField2.getText();
        int newAge = Integer.parseInt(jTextField4.getText());
        String newGenre = jComboBox1.getSelectedItem().toString();
        String newPass = jTextField3.getText();

        // Update query
        String query = "UPDATE electeur SET enom=?, eage=?, egenre=?, epass=? WHERE enom=?";
        try (PreparedStatement pst = Con.prepareStatement(query)) {
            pst.setString(1, newNom);
            pst.setInt(2, newAge);
            pst.setString(3, newGenre);
            pst.setString(4, newPass);
            pst.setString(5, Key);

            int rowsAffected = pst.executeUpdate();
            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(this, "Modifications enregistrées avec succès.", "Enregistrement réussi", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Échec de l'enregistrement des modifications.", "Erreur d'enregistrement", JOptionPane.ERROR_MESSAGE);
            }
        }

        // Clear the text fields and reload the table
        jTextField2.setText("");
        jTextField3.setText("");
        jTextField4.setText("");
        jComboBox1.setSelectedIndex(-1);
        tbload();
    } catch (SQLException | NumberFormatException ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(this, "Erreur lors de l'enregistrement des modifications.", "Erreur d'enregistrement", JOptionPane.ERROR_MESSAGE);
    } 
    }//GEN-LAST:event_jButton3MouseClicked
    private void updateTableModelFromImport(DefaultTableModel model, XSSFSheet excelSheet) {
    //model.setRowCount(0); // Clear existing data

    try {
        Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/election", "root", "");

        for (int i = 1; i < excelSheet.getLastRowNum() + 1; i++) {
            XSSFRow excelRow = excelSheet.getRow(i);
            XSSFCell Nom = excelRow.getCell(0);
            XSSFCell AgeCell = excelRow.getCell(1);
            XSSFCell Genre = excelRow.getCell(2);
            XSSFCell Pass = excelRow.getCell(3);
            
            int Age = (int) AgeCell.getNumericCellValue();
            
            model.addRow(new Object[]{
                    Nom != null ? Nom.toString() : "",
                    Age,
                    Genre != null ? Genre.toString() : "",
                    Pass  != null ? Pass.toString() : ""
            });

            // Insert data into the database
            String query = "INSERT INTO electeur (enom, eage, egenre,epass) VALUES (?, ?, ?, ?)";
            try (PreparedStatement pst = Con.prepareStatement(query)) {
                pst.setString(1, Nom != null ? Nom.toString() : "");
                pst.setInt(2, Age);
                pst.setString(3, Genre != null ? Genre.toString() : "");
                pst.setString(4, Pass != null ? Pass.toString() : "");
                pst.executeUpdate();
            }
        }
    } catch (SQLException ex) {
        ex.printStackTrace();
    } finally {
        try {
            if (Con != null) Con.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
}
    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked
        DefaultTableModel importmodel = (DefaultTableModel) jTable1.getModel();
        FileInputStream excelFIS = null;
        BufferedInputStream excelBIS = null;
        XSSFWorkbook excelImportWorkbook = null;
        String currentDirectoryPath = "C:\\Users\\user\\Desktop";
        JFileChooser excelFileChooserImport = new JFileChooser(currentDirectoryPath);
        FileNameExtensionFilter excelFileNameExtensionFilter = new FileNameExtensionFilter("EXCEL FILES", "xls", "xlsx", "xlsm");
        excelFileChooserImport.addChoosableFileFilter(excelFileNameExtensionFilter);
        int excelChooser = excelFileChooserImport.showOpenDialog(null);
        if (excelChooser == JFileChooser.APPROVE_OPTION) {
            try {
                File excelFile = excelFileChooserImport.getSelectedFile();
                excelFIS = new FileInputStream(excelFile);
                excelBIS = new BufferedInputStream(excelFIS);
                excelImportWorkbook = new XSSFWorkbook(excelBIS);
                XSSFSheet excelSheet = excelImportWorkbook.getSheetAt(0);

                // Update the table model with imported data
                updateTableModelFromImport(importmodel, excelSheet);

                JOptionPane.showMessageDialog(null, "Data imported successfully");
            } catch (FileNotFoundException ex) {
                ex.printStackTrace();
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButton4MouseClicked

    private void jButton5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseClicked
       try {
            Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/election", "root", "");
            St = Con.createStatement();
            Rs = St.executeQuery("SELECT enom, eage, egenre, epass FROM electeur");

            XSSFWorkbook workbook = new XSSFWorkbook();
            XSSFSheet sheet = workbook.createSheet("Electeur Data");

            // Create header row
            XSSFRow headerRow = sheet.createRow(0);
            headerRow.createCell(0).setCellValue("Nom");
            headerRow.createCell(1).setCellValue("Age");
            headerRow.createCell(2).setCellValue("Genre");
            headerRow.createCell(3).setCellValue("Pass");

            int rowNum = 1;
            while (Rs.next()) {
                XSSFRow row = sheet.createRow(rowNum++);
                row.createCell(0).setCellValue(Rs.getString("enom"));
                row.createCell(1).setCellValue(Rs.getInt("eage"));
                row.createCell(2).setCellValue(Rs.getString("egenre"));
                row.createCell(3).setCellValue(Rs.getString("epass"));
            }

            // Save the workbook to a file
            try (FileOutputStream outputStream = new FileOutputStream("C:\\Users\\user\\Desktop\\ElecteurData.xlsx")) {
                workbook.write(outputStream);
                JOptionPane.showMessageDialog(null, "Data exported successfully to ElecteurData.xlsx");
            }
        } catch (SQLException | IOException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error exporting data: " + e.getMessage(), "Export Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton5MouseClicked
    public void tbload(){
  
       try {
        Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/election", "root", "");
        St = Con.createStatement();

        Rs = St.executeQuery("SELECT enom, eage, egenre,epass FROM electeur");

        // Create column names
        Vector<String> columnNames = new Vector<>();
        columnNames.add("Nom");
        columnNames.add("Age");
        columnNames.add("Genre");
        columnNames.add("Pass");

        // Create data for the table model
        Vector<Vector<Object>> data = new Vector<>();

        // Populate data from the ResultSet
        while (Rs.next()) {
            Vector<Object> rowData = new Vector<>();
            rowData.add(Rs.getString("enom"));
            rowData.add(Rs.getInt("eage"));
            rowData.add(Rs.getString("egenre"));
            rowData.add(Rs.getString("epass"));
            data.add(rowData);
        }

        // Create the table model with column names and data
        DefaultTableModel model = new DefaultTableModel(data, columnNames);

        // Set the model to the JTable
        jTable1.setModel(model);
         
      } catch (Exception e) {
          e.printStackTrace();
      }
  }  

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ajout;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    // End of variables declaration//GEN-END:variables
}
