/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package election;

import java.io.BufferedInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.Vector;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import net.proteanit.sql.DbUtils;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author user
 */
public class Candid extends javax.swing.JInternalFrame {

    Connection Con = null;
    PreparedStatement pst  = null;
    ResultSet Rs=null;
    Statement St = null;
    public Candid() {
        initComponents();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI ui = (BasicInternalFrameUI) this.getUI();
        ui.setNorthPane(null);
        tbload();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        ajout = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(780, 370));

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));
        jPanel1.setPreferredSize(new java.awt.Dimension(730, 370));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setIcon(new javax.swing.ImageIcon("C:\\Users\\user\\Desktop\\IMAGES\\layout.png")); // NOI18N
        jLabel6.setText("Admin > Candidats");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Nom", "Age", "Genre"
            }
        ));
        jTable1.setIntercellSpacing(new java.awt.Dimension(5, 5));
        jTable1.setRowHeight(30);
        jTable1.setSelectionBackground(new java.awt.Color(0, 102, 102));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel3.setText("Nom et Prenom");

        jLabel4.setText("Age");

        jLabel5.setText("Genre");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Femme ", "Homme" }));
        jComboBox1.setToolTipText("");

        ajout.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        ajout.setForeground(new java.awt.Color(255, 255, 255));
        ajout.setText("Ajouter");
        ajout.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        ajout.setContentAreaFilled(false);
        ajout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ajoutMouseClicked(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Supprimer");
        jButton2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jButton2.setContentAreaFilled(false);
        jButton2.setMaximumSize(new java.awt.Dimension(47, 22));
        jButton2.setMinimumSize(new java.awt.Dimension(47, 22));
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Modifier");
        jButton3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jButton3.setContentAreaFilled(false);
        jButton3.setMaximumSize(new java.awt.Dimension(47, 22));
        jButton3.setMinimumSize(new java.awt.Dimension(47, 22));
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(0, 102, 102));
        jButton4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setIcon(new javax.swing.ImageIcon("C:\\Users\\user\\Desktop\\IMAGES\\icons8-ms-excel-26.png")); // NOI18N
        jButton4.setText("Import EXCEL");
        jButton4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jButton4.setContentAreaFilled(false);
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(0, 102, 102));
        jButton5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setIcon(new javax.swing.ImageIcon("C:\\Users\\user\\Desktop\\IMAGES\\icons8-ms-excel-26.png")); // NOI18N
        jButton5.setText("Export EXCEL");
        jButton5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jButton5.setContentAreaFilled(false);
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton5MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(86, 86, 86)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ajout, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(74, 74, 74))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 673, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(89, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(2, 2, 2)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(15, 15, 15))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4))
                                .addGap(18, 18, 18)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel5))
                        .addGap(34, 34, 34)
                        .addComponent(ajout, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 768, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 363, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void tbload() {
    try {
        Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/election", "root", "");
        St = Con.createStatement();

        Rs = St.executeQuery("SELECT cnom, cage, cgenre FROM candidat");

        // Create column names
        Vector<String> columnNames = new Vector<>();
        columnNames.add("Nom");
        columnNames.add("Age");
        columnNames.add("Genre");

        // Create data for the table model
        Vector<Vector<Object>> data = new Vector<>();

        // Populate data from the ResultSet
        while (Rs.next()) {
            Vector<Object> rowData = new Vector<>();
            rowData.add(Rs.getString("cnom"));
            rowData.add(Rs.getInt("cage"));
            rowData.add(Rs.getString("cgenre"));

            data.add(rowData);
        }

        // Create the table model with column names and data
        DefaultTableModel model = new DefaultTableModel(data, columnNames);

        // Set the model to the JTable
        jTable1.setModel(model);

    } catch (Exception e) {
        e.printStackTrace();
    }
    }
    private void ajoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ajoutMouseClicked
        if(jTextField2.getText().isEmpty()){
            JOptionPane.showMessageDialog (this,"Enter le Nom");
        }else if(jTextField4.getText().isEmpty()){
            JOptionPane.showMessageDialog (this,"Enter le Age");
        }else{
            try{
                Con = DriverManager.getConnection("jdbc:MySQL://localhost:3306/election","root","");
                Statement countElecteurStatement = Con.createStatement();
                ResultSet countElecteurResult = countElecteurStatement.executeQuery("SELECT COUNT(*) FROM electeur");
                countElecteurResult.next();
                int totalElecteurs = countElecteurResult.getInt(1);//Récupère la valeur de la première colonne du résultat
                Statement countCandidateStatement = Con.createStatement();
                ResultSet countCandidateResult = countCandidateStatement.executeQuery("SELECT COUNT(*) FROM candidat ");
                countCandidateResult.next();
               int totalCandidates = countCandidateResult.getInt(1);
               if(totalCandidates < totalElecteurs/3){
                PreparedStatement Add = Con.prepareStatement("insert into candidat (cnom,cage,cgenre) VALUES (?, ?, ?)");

                Add.setString(1, jTextField2.getText());
                String genre;
                genre =jComboBox1.getSelectedItem().toString();
                Add.setString(3, genre);
                Add.setString(2, jTextField4.getText());
                

                int rowsAffected = Add.executeUpdate();
                if (rowsAffected > 0) {
                    JOptionPane.showMessageDialog(this, "Data inserted successfully!");
                } else {
                    JOptionPane.showMessageDialog(this, "Failed to insert data");
                }
                Add.close();
               }else{
                JOptionPane.showMessageDialog(this, "Le nombre de candidats est suffisant.", "MAX CANDIDATS", JOptionPane.ERROR_MESSAGE); 
               }
                
                
                Con.close();
                tbload();
            }catch(Exception e){
                JOptionPane.showMessageDialog (this,e);
            }
            jTextField2.setText("");
            jTextField4.setText("");
        }
    }//GEN-LAST:event_ajoutMouseClicked

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        if (Key.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Veuillez sélectionner une ligne à supprimer.", "Aucune ligne sélectionnée", JOptionPane.WARNING_MESSAGE);
            return;}
        try {
            Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/election", "root", "");
            String query = "DELETE FROM candidat WHERE cnom = ?";
            try (PreparedStatement pst = Con.prepareStatement(query)) {
                pst.setString(1, Key);
                pst.executeUpdate();

                // Clear the text fields and reload the table
                jTextField2.setText("");
                
                jTextField4.setText("");
                jComboBox1.setSelectedIndex(-1); // Assuming you want to clear the selection in the JComboBox
                tbload();

                JOptionPane.showMessageDialog(this, "Ligne supprimée avec succès.", "Suppression réussie", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Erreur lors de la suppression de la ligne.", "Erreur de suppression", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton2MouseClicked

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        if (Key.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Veuillez sélectionner une ligne à modifier.", "Aucune ligne sélectionnée", JOptionPane.WARNING_MESSAGE);
            return;
        }

        try {
            Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/election", "root", "");

            String newNom = jTextField2.getText();
            int newAge = Integer.parseInt(jTextField4.getText());
            String newGenre = jComboBox1.getSelectedItem().toString();
            

            // Update query
            String query = "UPDATE candidat SET cnom=?, cage=?, cgenre=? WHERE cnom=?";
            try (PreparedStatement pst = Con.prepareStatement(query)) {
                pst.setString(1, newNom);
                pst.setInt(2, newAge);
                pst.setString(3, newGenre);
                pst.setString(4, Key);

                int rowsAffected = pst.executeUpdate();
                if (rowsAffected > 0) {
                    JOptionPane.showMessageDialog(this, "Modifications enregistrées avec succès.", "Enregistrement réussi", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "Échec de l'enregistrement des modifications.", "Erreur d'enregistrement", JOptionPane.ERROR_MESSAGE);
                }
            }

            // Clear the text fields and reload the table
            jTextField2.setText("");
            jTextField4.setText("");
            jComboBox1.setSelectedIndex(-1);
            tbload();
        } catch (SQLException | NumberFormatException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Erreur lors de l'enregistrement des modifications.", "Erreur d'enregistrement", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton3MouseClicked
    String Key = "";
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
         DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
         int MyIndex = jTable1.getSelectedRow();
         if (MyIndex != -1) {
        Key = model.getValueAt(MyIndex, 0).toString(); 
        jTextField2.setText(model.getValueAt(MyIndex, 0).toString());
        jTextField4.setText(model.getValueAt(MyIndex, 1).toString());
        jComboBox1.setSelectedItem(model.getValueAt(MyIndex, 2).toString());
        } 
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked
    DefaultTableModel importmodel = (DefaultTableModel) jTable1.getModel();
    FileInputStream excelFIS = null;
    BufferedInputStream excelBIS = null;
    XSSFWorkbook excelImportWorkbook = null;
    String currentDirectoryPath = "C:\\Users\\user\\Desktop";
    JFileChooser excelFileChooserImport = new JFileChooser(currentDirectoryPath);
    FileNameExtensionFilter excelFileNameExtensionFilter = new FileNameExtensionFilter("EXCEL FILES", "xls", "xlsx", "xlsm");
    excelFileChooserImport.addChoosableFileFilter(excelFileNameExtensionFilter);
    int excelChooser = excelFileChooserImport.showOpenDialog(null);
    if (excelChooser == JFileChooser.APPROVE_OPTION) {
        try {
            File excelFile = excelFileChooserImport.getSelectedFile();
            excelFIS = new FileInputStream(excelFile);
            excelBIS = new BufferedInputStream(excelFIS);
            excelImportWorkbook = new XSSFWorkbook(excelBIS);
            XSSFSheet excelSheet = excelImportWorkbook.getSheetAt(0);

            // Update the table model with imported data
            updateTableModelFromImport(importmodel, excelSheet);

            JOptionPane.showMessageDialog(null, "Data imported successfully");
        } catch (FileNotFoundException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, "File not found: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } catch (IOException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error reading file: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, "An unexpected error occurred: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }}
    }//GEN-LAST:event_jButton4MouseClicked

    private void jButton5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseClicked
        try {
        XSSFWorkbook workbook = new XSSFWorkbook();
        XSSFSheet sheet = workbook.createSheet("Candidats Data");

        // Add column names
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        XSSFRow headerRow = sheet.createRow(0);
        for (int col = 0; col < model.getColumnCount(); col++) {
            XSSFCell cell = headerRow.createCell(col);
            cell.setCellValue(model.getColumnName(col));
        }

        // Add data rows
        for (int row = 0; row < model.getRowCount(); row++) {
            XSSFRow excelRow = sheet.createRow(row + 1);
            for (int col = 0; col < model.getColumnCount(); col++) {
                XSSFCell cell = excelRow.createCell(col);
                cell.setCellValue(model.getValueAt(row, col).toString());
            }
        }

        // Save the workbook to a file
        try (FileOutputStream outputStream = new FileOutputStream("C:\\Users\\user\\Desktop\\candidats_data.xlsx")) {
            workbook.write(outputStream);
            JOptionPane.showMessageDialog(this, "Data exported to Excel successfully!");
        } catch (IOException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error exporting data to Excel: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }

    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "An unexpected error occurred: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_jButton5MouseClicked
    private void updateTableModelFromImport(DefaultTableModel model, XSSFSheet excelSheet) {
    //model.setRowCount(0); // Clear existing data

    try {
        Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/election", "root", "");

        for (int i = 1; i < excelSheet.getLastRowNum() + 1; i++) {
            XSSFRow excelRow = excelSheet.getRow(i);
            XSSFCell Nom = excelRow.getCell(0);
            XSSFCell AgeCell = excelRow.getCell(1);
            XSSFCell Genre = excelRow.getCell(2);

            // Convert AgeCell value to integer
            int Age = (int) AgeCell.getNumericCellValue();

            // Add a new row to the model with the data from the Excel sheet
            model.addRow(new Object[]{
                    Nom != null ? Nom.toString() : "",
                    Age,  // Use the converted integer value
                    Genre != null ? Genre.toString() : ""
            });

            // Insert data into the database
            String query = "INSERT INTO candidat (cnom, cage, cgenre) VALUES (?, ?, ?)";
            try (PreparedStatement pst = Con.prepareStatement(query)) {
                pst.setString(1, Nom != null ? Nom.toString() : "");
                pst.setInt(2, Age);  // Use the converted integer value
                pst.setString(3, Genre != null ? Genre.toString() : "");

                pst.executeUpdate();
            }
        }
    } catch (SQLException ex) {
        ex.printStackTrace();
    } 
}

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ajout;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField4;
    // End of variables declaration//GEN-END:variables
}